#cloud-config
# Generated by Ansible Dev Environment project
# Assisted by Cline (powered by xAI Grok model) on 2025-09-25.
# Updated for newer features: GUI apps, Nix GUI installs, dev environments, VSCode, etc.

users:
  - name: {{ target_user }}
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/zsh
    groups: sudo, wheel, docker
    home: /home/{{ target_user }}
    create: true

packages:
  - curl
  - git
  - python3
  - python3-pip
  - ansible
  - zsh
  - tmux
  - docker-ce
  - containerd.io
  - docker-compose-plugin
  - netdata
{% if ansible_os_family == 'Debian' %}
  - nala
{% elif ansible_os_family == 'RedHat' %}
  - dnf-automatic
{% endif %}
{% for app in basic_apps %}
  - {{ app }}
{% endfor %}

write_files:
  - path: /tmp/setup.sh
    content: |
      #!/bin/bash
      set -e

      # Clone the repo (update URL as needed)
      cd /tmp
      git clone {{ playbook_repo_url | default('https://github.com/mehulspameracc/ansible-new-setup-v2.git') }} ansible-dev-env
      cd ansible-dev-env

      # Install Ansible collections
      ansible-galaxy collection install -r requirements.yml

      # Install Nix (for nix-gui-installs role)
      if ! command -v nix &> /dev/null; then
        sh <(curl -L https://nixos.org/nix/install) --daemon
        . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
      fi

      # Install Netdata if not in playbook
      if ! command -v netdata &> /dev/null; then
        bash <(curl -Ss https://get.netdata.cloud/kickstart.sh) --dont-wait --disable-telemetry
      fi

      # Create inventory for local execution
      mkdir -p inventory
      cat > inventory/hosts.ini << EOF
      [localhost]
      localhost ansible_connection=local
      EOF

      # Run playbook with newer features enabled
      # Skip cloud-init to avoid loop; enable GUI, Nix GUI, dev-envs for VSCode/system setup
      ansible-playbook -i inventory/hosts.ini site.yml \
        --extra-vars "target_user={{ target_user }} enable_gui=true enable_nix_gui=true dev_envs=['python','js','go']" \
        --skip-tags cloud-init \
        --tags "base-installs,shell-customize,dev-envs,gui-installs,nix-gui-installs,fonts,terminals,docker-setup"

      # Optional: Run interactive Python script for custom role selection (uncomment if preferred)
      # cd files && python3 install_ansible.py

runcmd:
  - chmod +x /tmp/setup.sh
  - /tmp/setup.sh
  - rm -rf /tmp/setup.sh

# Note: Set playbook_repo_url in vars for your Git repo.
# Customize dev_envs list and tags as needed for specific features.
